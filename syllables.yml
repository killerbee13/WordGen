# Base tags, only ones that are hardcoded
replacement: # Only acts on "val"
    # Arbitrarily, U+E000 (private use area A) is for duplication
  - - m: '(.)\ue000'
      r: '\1;\1'
    - m: ';;'
      r: ';'
    # English digraphs (no-op)
  - - m: '(t|s|c|p);h'
      r: '\1;h'
    # "růṙ" is not valid/equivalent to just "ůṙ"
    # - m: 'růṙ'
      # r: 'ůṙ'
    # De-diphthongization (apply diaeresis)
  # - - m: "([aeiouů]\u0308?);([aeiouů])"
      # r: "\\1;\\2\u0308"
  # S-related digraph detection (no-op)
  - - m: 's;([ptknml])'
      r: 's;\1'
    - m: 's([ptknml]);'
      r: 's\1;'
    - m: ';s([ptknml])'
      r: ';s\1'
  # Clean up generation artifacts
    # delete initial ;
  - - m: '^;'
      r: ''
    # non-final ;
    - m: ';(.)'
      r: "'\\1"
    # Clear final ;
  - - m: ';'
      r: ''

replaceIPA:
  - - m: ';;'
      r: ';'
    - m: ';?/;?'
      r: '/'
    # tč is not a long consonant; delete
  - - m: "t;(tʃ)"
      r: ';\1'
    # Long consonant application
  - - m: '([pbkgtdszɸβnml]);\1'
      r: '\1ː'
    # ůṙ reduction
    - m: 'əɚ'
      r: 'ɚ'
    # "růṙ" is not valid/equivalent to just "ůṙ"
    # - m: 'rɚ'
      # r: 'ɚ'
    # VC;V → V;CV
    - m: '([aeiouəɚɪʊ]ː?)([pbkgtdszɸβnml]);([aeiouəɚɪʊ])'
      r: '\1;\2\3'
  # Homorganic nasals
  - - {m: 'n;p', r: 'm;p'}
    - {m: 'n;b', r: 'm;b'}
    - {m: 'n;k', r: 'ŋ;k'}
    - {m: 'm;k', r: 'ŋ;k'}
    - {m: 'm;t', r: 'n;t'}
    - {m: 'm;d', r: 'n;d'}
    - {m: 'n;g', r: 'ŋ;g'}
    - {m: 'm;g', r: 'ŋ;g'}
  # a fricative's voicing is back-propagated to an immediately preceding consonant
  - - {m: 'b;ɸ', r: 'p;ɸ'}
    - {m: 'b;s', r: 'p;s'}
    - {m: 'p;β', r: 'b;β'}
    - {m: 'p;z', r: 'b;z'}
    - {m: 'g;ɸ', r: 'k;ɸ'}
    - {m: 'g;s', r: 'k;s'}
    - {m: 'k;β', r: 'g;β'}
    - {m: 'k;z', r: 'g;z'}
    - {m: 'd;ɸ', r: 't;ɸ'}
    - {m: 'd;s', r: 't;s'}
    - {m: 't;β', r: 'd;β'}
    - {m: 't;z', r: 'd;z'}
  # Illegal affricates are transformed into long fricatives
  - - {m: 'p;ɸ', r: 'ɸː'}
    - {m: 'b;β', r: 'βː'}
    - {m: 't;s', r: 'sː'}
    - {m: 'd;z', r: 'zː'}
  # IPA uses '.' to break syllables
  - - m: ';'
      r: '.'

# Used to break up syllables (. not used because of regex difficulty)
.:
  - {val: ";", ipa: ";"}

# End base tags
root:
  - val: ";{Word};"
    ipa: "/"
  #- val: ".{WeakVowel}{.}{RVowel}."


# Note: ipa is inserted for every literal in the val. You are free to use this
  # to your advantage. If this is undesirable, then decompose your references
  # such that only one literal is present in any node.

# "freq" values do not need any form of normalization.
  # Only their relative values within a particular array matters.
  # This reference file generally bases them on 1 and prefers integers in most
    # cases for neatness, but could just as easily have phrased them all as
    # percentages.
Word:
  - val: "{WeakSyllable}{.}{StrSyllable}"
    freq: d1
  - val: "{StrSyllable}"
    freq: d1
  - val: "{StrSyllable}{.}{StrSyllable}"
    freq: d.7
    # The IPA . is inserted for both syllables
  - val: "{StrSyllable}{.}{WeakSyllable}{.}{StrSyllable}"
    freq: d.5
  - val: "{WeakSyllable}{.}{Word2}"
    freq: d0.7
  - val: "{StrSyllable}{.}{Word2}"
    freq: d1.5

# Tail recursive, shouldn't create words that are too long
# after the first few, length-chance is negative-exponential
Word2:
  - val: "{WeakSyllable}{.}{StrSyllable}"
    freq: d2
  - val: "{StrSyllable}"
    freq: d1.5
  - val: "{WeakSyllable}{.}{Word2}"
    freq: d0.7
  - val: "{StrSyllable}{.}{Word2}"
    freq: d0.8

# Not used (yet)
Iamb:
  - val: ";{WeakSyllable}{.}{StrSyllable};"
    freq: d1

longConsonantBisyllable:
  - val: ""

StrSyllable:
  - val: "{Onset}{FullVowelNC}"
    freq: d4
  - val: "{FullVowelNC}"
    freq: d0.75
  - val: "{Onset}{FullVowel}{AnyCoda}"
    freq: d2
  - val: "{FullVowel}{AnyCoda}"
    freq: d0.5
  - val: "{Onset}{LVowel}{LCoda}"
    freq: d0 
    # 0.2

WeakSyllable:
  - val: "{Onset}{WeakVowel}{AnyCoda}"
    freq: d12
  - val: "{WeakVowel}{AnyCoda}"
    freq: d4
  - val: "{Onset}{LVowel}{LCoda}"
    freq: d0
    # 1.2
  - val: "{LVowel}{LCoda}"
    freq: d0
    # .4

# infinity descendants (1092454^depth*16 unique)
Noun:
  - val: ";{NounStem}{.}{NounInflections};"
    ipa: "/"

# infinity descendants (1092454^depth unique)
NounStem:
  - val: "{NounStem2}{.}{LexicalRoot}"
    freq: d3
  - val: "{LexicalRoot}"
NounStem2:
  - val: "{NounStem3}{.}{LexicalRoot}"
    freq: d1.5
  - val: "{LexicalRoot}"
NounStem3:
  - val: "{NounStem3}{.}{LexicalRoot}"
    freq: d0.75
  - val: "{LexicalRoot}"

# 1136982 descendants (1092454 unique)
LexicalRoot:
  - val: "{Onset}{FullVowel}"
    freq: d4
  - val: "{Onset}{WeakVowel}{AnyCoda}"
    freq: d1
  - val: "{Onset}{WeakVowel}{.}{Onset}{FullVowel}"
    freq: d0.2
  - val: "{Onset}{WeakVowel}{AnyCoda}{.}{Onset}{FullVowel}"
    freq: d0.1
  - val: "{Onset}{WeakVowel}{GemCons}{FullVowel}"
    freq: d0.1
# For counting
LexicalRoot.0:
  - val: "{LexicalRoot.1}"
    freq: d4
  - val: "{LexicalRoot.2}"
    freq: d1
  - val: "{LexicalRoot.3}"
    freq: d0.2
  - val: "{LexicalRoot.4}"
    freq: d0.1
  - val: "{LexicalRoot.5}"
    freq: d0.1
LexicalRoot.1:
  - val: "{Onset}{FullVowel}"
LexicalRoot.2:
  - val: "{Onset}{WeakVowel}{AnyCoda}"
LexicalRoot.3:
  - val: "{Onset}{WeakVowel}{.}{Onset}{FullVowel}"
LexicalRoot.4:
  - val: "{Onset}{WeakVowel}{AnyCoda}{.}{Onset}{FullVowel}"
LexicalRoot.5:
  - val: "{Onset}{WeakVowel}{GemCons}{FullVowel}"

# 16 descendants
NounInflections:
  - val: "{Gender};{Count};{Plural};{Case}"
    ipa: ";"
    freq: d1

Gender:
  - val: "{Gender/I}"
    freq: d8
  - val: "{Gender/A}"
    freq: d4.5
  - val: "{Gender/D}"
    freq: d1
Gender/I:
  - val: ""
    freq: d8
Gender/A:
  - val: "se"
    ipa: "se"
    freq: d3
  - val: "i"
    ipa: "i"
    freq: d1.5
Gender/D:
  - val: "taṙ"
    ipa: "taɚ"
    freq: d1

Count:
  - freq: d4
  - val: "mat"
    ipa: "mat"

Plural:
  - freq: d3
  - val: "{Vowel:0 0 0 0 0 1 0 0 0}"

Case: [{}]

GemCons:
  - val: "{AnyCoda}\ue000"
    ipa: "ː"

# 11 descendants
Vowel:
  - val: "{Vowel.Schwa}"
  - {val: "u", ipa: "u"}
  - {val: "o", ipa: "o"}
  - {val: "i", ipa: "i"}
  - {val: "e", ipa: "e"}
  - {val: "a", ipa: "a"}
  - {val: "ao", ipa: "aʊ"}
  - {val: "ai", ipa: "aɪ"}
  - val: "{RVowel}"
  - val: "{LVowel}"
    freq: 0
Vowel.Schwa:
  - val: ů
    ipa: ə

WeakVowel:
  - val: "{Vowel:2 1.75 1.25 .5 1 .75 .5 .5 1.25}"
FullVowel:
  - val: "{Vowel:.33 1 1.5 1 1.5 2 .75 .75 3.5}"
# Certain vowels are more common in open syllables than closed
# 19 descendants (11 unique)
FullVowelNC:
  - val: "{FullVowel}"
    freq: d15
  - val: "{Vowel:0 1.5 1 1.5 1 0 .66 .66 0}"
    freq: d19

# 3 descendants
RVowel:
  - val: "{Vowel:4 0 3 0 0 3 0 0 0 0}ṙ"
    ipa: ɚ

#8 descendants
LVowel:
  - val: "{Vowel:3 .2 2 .2 .2 2 .5 .5 0 0}ḷ"
    ipa: l

# 2 descendants
Dipthong:
  - val: "{Vowel:0 0 0 0 0 0 1.125 1 0 0}"

# 23 descendants
Consonant:
  # p b k g t d s z f v č j n m l h r sC
  - {val: "p", ipa: "p"}
  - {val: "b", ipa: "b"}
  - {val: "k", ipa: "k"}
  - {val: "g", ipa: "g"}
  - {val: "t", ipa: "t"}
  - {val: "d", ipa: "d"}
  - {val: "s", ipa: "s"}
  - {val: "z", ipa: "z"}
  - {val: "f", ipa: "ɸ"}
  - {val: "v", ipa: "β"}
  - {val: "č", ipa: "tʃ"}
  - {val: "j", ipa: "dʒ"}
  - {val: "n", ipa: "n"}
  - {val: "m", ipa: "m"}
  - {val: "l", ipa: "l"}
  - {val: "h", ipa: "h"}
  - {val: "r", ipa: "r"}

#23 descendants
Onset:             # p   b   k  g   t   d s   z   f   v  č  j  n     m     l   h   r
  - val: "{Consonant:1.5 .75 2 .95 1.5 1 1.5 .75 1.6 .8 .7 .3 1.225 1.225 1.4 1.2 1.4}"
    freq: d20
  - val: "s{SOnset}"
    ipa: "s"
    freq: d0.75

# 6 descendants
SOnset:            # p   b k   g t   d s z f v č j n     m     l   h r sC
  - val: "{Consonant:1.5 0 1.5 0 1.5 0 0 0 0 0 0 0 1.125 1.125 .25 0 0 0}"

# 16 descendants
AnyCoda:           # p b k   g  t   d  s   z   f  v   č j n  m  l  h r
  - val: "{Consonant:1 1 1.3 .7 1.3 .7 .25 .15 1.3 .7 0 0 .8 .8 .7 0 0}"
    freq: d10.7
  - val: "s{SCoda}"
    ipa: "s"
    freq: d0.2
  # "ṙ" is part of vowel, not coda

SCoda:             # p b k g t d s z f v č j n m l h r sC
  - val: "{Consonant:1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0}"

LCoda:             # p b   k   g   t   d   s  z   f   v  č j n  m  l h r sC
  - val: "{Consonant:1 1.5 1.3 1.2 1.3 1.2 .5 .35 1.3 .7 0 0 .8 .8 0 0 0 .2}"
