channels:
  p: "Pathsim"

replace:
  val:
    - S:
        default: ["{}{}"]
# Simple infinite recursion
A:
  - val: "{A} {A}"

a:
  - val: "a{b}"
    ipa: "a"
  - val: ""
    ipa: "A"
b:
  - val: "b{c}"
  - val: "bb{c}b"
    ipa: "b"
c:
  - val: "{d}c"
    ipa: "c"
d:
  - val: "d{e}"
    ipa: "d"
  - val: "d{f}"
    ipa: "d"
e:
  - val: "e{f}e"
    ipa: "e"
f:
  - val: "f{g}"
    ipa: "f"
  - val: "0"
    ipa: "0"
    freq: 0
g:
  - val: "g{a} {a}g"
    ipa: "g"
  - val: "{e}"
    ipa: "g."

x:
  - val: ".{y}."
    ipa: x
y:
  - val: q
    ipa: q
  - val: w
    ipa: w
  - val: e
    ipa: e

# "Wide" expansion demonstration (limited to depth**2 expansions)
W:
  - val: "{W}{W}{W}{W}{W}{W}{W}{W}{W}{W}{W}{W}{W}{W}{W}{W}"

# This node produces its own path
P:
  - val: "+0"
    p: "+0"
    freq: d.1
  - val: "+1{R:.5}"
    p: "+1"
  - val: "+2{R:.5}{R:.75}"
    p: "+2"
R:
  - p: "[0]"
  - val: "{R:1.1}{R/]}"
    p: "[1"
  - val: "{R:1.2}{R:1.2}{R/]}"
    p: "[2"
R/]:
  p: "]"

P1:
  - val: "{P1:1 0}{R/]}"
    p: '[0'
    freq: d0
  - val: "{P1/+}{P1:1 0}{R/]}{endl}"
P1/+:
  p: "+1"
endl:
  p: "\n"

# Demonstrates that in HTML mode the output is escaped
html:
  - val: "</td>"

